@using Core.Model
@model Core.Model.Airport

@{
    ViewBag.Title = "Create airport";
}

@{
    IEnumerable<Terminal> terminals = (IEnumerable<Terminal>)ViewData["Terminals"];
    IEnumerable<Gate> gates = (IEnumerable<Gate>)ViewData["Gates"];
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-2">
            @Html.Partial("_SideBar")
        </div>
        <div class="col-md-10">
            <div class="row">
                <h3>Create new airport</h3>
            </div>
            <div class="row">
                <div class="col-md-6">

                </div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Airport</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div class="form-horizontal">
        <hr />
        <h4>Terminals</h4>
        <hr />
        @foreach (Terminal terminal in terminals)
        {
            <div>
                <input type="checkbox" value="@terminal.Id" name="@terminal.Name" class="checkbox" />@terminal.Name
                <div>
                    <p>Gates of terminal @terminal.Name</p>
                    @foreach (Gate gate in gates)
                    {
                        <div>
                            @Html.CheckBox(@gate.Name, false)
                            @*<input type="checkbox" value="@gate.Id" name="@gate.Name" class="checkbox"/>@gate.Name*@
                        </div>
                    }
                </div>
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "AirportIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
