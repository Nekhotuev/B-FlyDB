@using Web.ViewModel
@model IEnumerable<AirportViewModel>

@{
    ViewBag.Title = "Airports";
}

@Scripts.Render("~/Scripts/jquery-ui")
@Styles.Render("~/Content/jquery-ui")

<div class="container-fluid">
    <div class="row">
        <div class="col-md-2">
            @Html.Partial("_SideBar")
        </div>
        <div class="col-md-10" id="bodycontent">
            <div class="row">
                <div class="col-md-12">
                    <h2>Airports</h2>
                </div>
            </div>
            <div class="row createButton">
                <div class="col-md-12">
                    @Ajax.ActionLink("Create new", "AirportCreate", "Classifiers", new AjaxOptions { UpdateTargetId = "bodycontent" }, new { @class="btn btn-default" })
                </div>
            </div>
            <div class="row createButton">
                <div class="col-md-2">
                    <input type="text" name="name" class="form-control" runat="server" id="searchBox" data-autocomplete-source='@Url.Action("AirportSearch", "Classifiers")' />
                </div>
                <div class="col-md-2">
                    @*pass name from data-autocomplete-source to parameter*@
                    <input type="button" class="btn btn-default" value="Search" onclick="location.href = '@Url.Action("AirportGetIdByName", new {name = "Vnukovo"})'"/>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <table class="table table-bordered table-hover" id="linkedtable">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Name)</th>
                            <th>@Html.DisplayNameFor(model => model.Code)</th>
                            <th>@Html.DisplayNameFor(model => model.City)</th>
                        </tr>
                        @foreach (var item in Model)
                        {
                            <tr onclick="this.children[0].children[0].click();">
                                <td class="linkedTableText">
                                    @Ajax.ActionLink(item.Name, "AirportEdit", "Classifiers", new { id = item.Id }, new AjaxOptions { UpdateTargetId = "bodycontent" }, new{ style="display:none;" })
                                    @item.Name
                                </td>
                                <td class="linkedTableText">
                                    @Html.DisplayFor(modelItem => item.Code)
                                </td>
                                <td class="linkedTableText">
                                    @Html.DisplayFor(modelItem => item.City.Name)
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    @{
                        var totalPages = int.Parse(ViewData["TotalPages"].ToString());
                        var currentPage = int.Parse(ViewData["PageNumber"].ToString());
                    }
                    
                    @if (totalPages < 6)
                    {
                    <ul class="pagination justify-content-center">
                        @if (currentPage == 1)
                        {
                            <li class="page-item disabled"><a class="page-link">Previous</a></li>
                        }
                        else
                        {
                            <li>@Ajax.ActionLink("Previous", "AirportIndex", "Classifiers", new {pageNumber = currentPage - 1}, new AjaxOptions { UpdateTargetId = "bodycontent" }, new { @class = "page-item" })</li>
                        }

                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li>@Ajax.ActionLink(i.ToString(), "AirportIndex", "Classifiers", new {pageNumber = i}, new AjaxOptions { UpdateTargetId = "bodycontent" }, new { @class = "page-item" })</li>
                        }

                        @if (currentPage == totalPages)
                        {
                            <li class="page-item disabled"><a class="page-link">Next</a></li>
                        }
                        else
                        {
                            <li>@Ajax.ActionLink("Next", "AirportIndex", "Classifiers", new {pageNumber = currentPage + 1}, new AjaxOptions { UpdateTargetId = "bodycontent" }, new { @class = "page-item" })</li>
                        }
                    </ul>
                    }
                    else
                    {
                    <ul class="pagination">
                        <li>@Ajax.ActionLink("First", "AirportIndex", "Classifiers", new { pageNumber = 1 }, new AjaxOptions { UpdateTargetId = "bodycontent" }, new { @class = "page-item" })</li>
                        <li>@Ajax.ActionLink("Pervious", "AirportIndex", "Classifiers", new { pageNumber = currentPage - 1 }, new AjaxOptions { UpdateTargetId = "bodycontent" }, new { @class = "page-item" })</li>
                        <li class="page-item disabled"><a class="page-link">@currentPage</a></li>
                        <li>@Ajax.ActionLink("Next", "AirportIndex", "Classifiers", new { pageNumber = currentPage + 1 }, new AjaxOptions { UpdateTargetId = "bodycontent" }, new { @class = "page-item" })</li>
                        <li>@Ajax.ActionLink("Last", "AirportIndex", "Classifiers", new { pageNumber = totalPages }, new AjaxOptions { UpdateTargetId = "bodycontent" }, new { @class = "page-item" })</li>
                    </ul>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@*script get names from controllers method*@
<script>
    $(function () {
        $("[data-autocomplete-source]").each(function () {
            var target = $(this);
            target.autocomplete({ source: target.attr("data-autocomplete-source") });
        });
    });
</script>